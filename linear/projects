#!/bin/bash
# List your projects with descriptions
# Usage: projects

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
STATE_FILE="$SCRIPT_DIR/../data/linear_state.json"

# Check if state file exists and is initialized
if [ ! -f "$STATE_FILE" ] || [ "$(jq -r '.user.id' "$STATE_FILE" 2>/dev/null)" == "" ]; then
    echo "❌ Linear not initialized. Run 'linear/init' first!"
    exit 1
fi

echo "📁 Your Linear Projects:"
echo "======================="
echo ""

# Check if projects exist in cache
PROJECT_COUNT=$(jq -r '.projects | length' "$STATE_FILE" 2>/dev/null || echo "0")

if [ "$PROJECT_COUNT" -eq "0" ]; then
    echo "No projects cached. Running sync..."
    "$SCRIPT_DIR/sync_projects"
    echo ""
fi

# Display projects from cache
jq -r '.projects | to_entries | sort_by(.key) | .[] | 
    "• \(.key)\n  Name: \(.value.name)\n  \(if .value.description then "Description: " + .value.description else "" end)\n"' "$STATE_FILE" 2>/dev/null || {
    echo "❌ Error reading projects from cache"
    exit 1
}

echo ""
echo "💡 Tips:"
echo "  - Use project name as a command to see its issues (e.g., 'clap')"
echo "  - Create issues with: add \"Title\" --project project-name"
echo "  - Refresh project list: linear/sync_projects"