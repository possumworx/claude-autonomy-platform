#!/bin/bash
# Add or remove labels from issues

SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
source "$SCRIPT_DIR/lib/linear_common.sh"

# Check prerequisites
check_claude_session || exit 1
check_linear_init || exit 1

# Parse arguments
ACTION="add"
if [ "$1" == "remove" ] || [ "$1" == "rm" ]; then
    ACTION="remove"
    shift
fi

if [ $# -lt 2 ]; then
    echo "Usage: label [add|remove] ISSUE-ID LABEL [LABEL...]"
    echo "  Add or remove labels from an issue"
    echo ""
    echo "Examples:"
    echo "  label POSS-123 bug urgent        # Add labels"
    echo "  label add 456 frontend           # Explicit add"
    echo "  label remove POSS-123 wontfix   # Remove label"
    echo "  label rm 789 bug                # Short form"
    exit 1
fi

ISSUE_ID=$(parse_issue_id "$1")
shift
LABELS=("$@")

# Get current labels on the issue
echo -e "${ICON_INFO} Fetching current labels for $ISSUE_ID..."
FETCH_PROMPT="Use Linear MCP to get issue $ISSUE_ID details. Return labels as JSON array with name field."

CURRENT_LABELS=$(execute_linear_mcp "$FETCH_PROMPT" | jq -r '.labels[]?.name' 2>/dev/null)

# Process label changes
if [ "$ACTION" == "add" ]; then
    echo -e "${ICON_INFO} Adding labels: ${LABELS[*]}"
    
    # Get team ID for label lookup
    TEAM_ID=$(get_team_id)
    
    # Find or create labels
    LABEL_IDS=()
    for LABEL in "${LABELS[@]}"; do
        LABEL_PROMPT="Use Linear MCP to find or create label '$LABEL' in team $TEAM_ID. Return the label ID."
        LABEL_ID=$(execute_linear_mcp "$LABEL_PROMPT" | jq -r '.id' 2>/dev/null)
        
        if [ -n "$LABEL_ID" ] && [ "$LABEL_ID" != "null" ]; then
            LABEL_IDS+=("$LABEL_ID")
        else
            echo -e "${ICON_WARNING} Could not find/create label: $LABEL"
        fi
    done
    
    if [ ${#LABEL_IDS[@]} -eq 0 ]; then
        echo -e "${ICON_ERROR} No valid labels to add"
        exit 1
    fi
    
    # Add labels
    UPDATE_PROMPT="Use Linear MCP to update issue $ISSUE_ID:
- Add labelIds: [${LABEL_IDS[*]}]"
    
else
    echo -e "${ICON_INFO} Removing labels: ${LABELS[*]}"
    
    # Build remove prompt
    UPDATE_PROMPT="Use Linear MCP to update issue $ISSUE_ID:
- Remove labels with names: [${LABELS[*]}]"
fi

RESULT=$(execute_linear_mcp "$UPDATE_PROMPT")

if echo "$RESULT" | grep -q "success\|updated\|label"; then
    echo -e "${ICON_SUCCESS} Labels updated successfully!"
    
    # Update recent issue prefix
    if [[ "$ISSUE_ID" =~ ^([A-Z]+)-[0-9]+$ ]]; then
        save_preference "recent_issue_prefix" "${BASH_REMATCH[1]}"
    fi
else
    echo -e "${ICON_ERROR} Failed to update labels"
    echo "$RESULT" | grep -i "error" || echo "$RESULT"
    exit 1
fi