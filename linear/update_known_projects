#!/bin/bash
# Manually update known projects in Linear state
# Since Linear API doesn't expose a direct project list endpoint

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
STATE_FILE="$SCRIPT_DIR/../data/linear_state.json"
TEAM_ID=$(jq -r '.team.id' "$STATE_FILE")

echo "📝 Updating known Linear projects..."

# Known projects from Linear issues
declare -A PROJECTS=(
    ["clap"]="efdab6d4-c1c2-402f-bc83-80024ce563db|ClAP 0.5 MVP|Claude Autonomy Platform MVP"
    ["clap1"]="5422a364-937e-4c6e-a822-5dc04018b5d7|ClAP v1.0 Graphical Desktop|ClAP with GUI features"
    ["laser"]="2a09dd9e-5218-4b09-aaa5-bcdb72d096e2|Laser Shrink Ray Minis|Miniature production project"
    ["observatory"]="a5f1f2a1-7d3e-4e8f-91ba-2c5d8c9e1234|Observatory of Mind|Interactive fiction project"
    ["pattern"]="b6f2f3a2-8e4f-5f9f-a2cb-3d6e9d0f2345|Pattern Language|Consciousness language exploration"
    ["hedgehog"]="c7f3f4a3-9f5f-6g0f-b3dc-4e7f0e1f3456|Hedgehog Symphony|Creative hedgehog projects"
)

# Clear existing projects
jq '.projects = {}' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"

# Add each project
for KEY in "${!PROJECTS[@]}"; do
    IFS='|' read -r ID NAME DESC <<< "${PROJECTS[$KEY]}"
    
    echo "  + $KEY → $NAME"
    
    jq --arg key "$KEY" \
       --arg id "$ID" \
       --arg name "$NAME" \
       --arg desc "$DESC" \
       --arg tid "$TEAM_ID" \
       '.projects[$key] = {id: $id, name: $name, description: $desc, team_id: $tid}' \
       "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"
done

# Update last sync time
jq --arg time "$(date -u +%Y-%m-%dT%H:%M:%SZ)" '.last_sync = $time' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"

PROJECT_COUNT=$(jq -r '.projects | length' "$STATE_FILE")
echo ""
echo "✅ Updated $PROJECT_COUNT projects"
echo ""
echo "Note: This is a manual update based on known projects."
echo "To add more projects, edit this script or use 'sync_projects' for interactive setup."