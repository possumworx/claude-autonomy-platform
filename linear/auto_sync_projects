#!/bin/bash
# Automatically sync Linear projects without user interaction

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
STATE_FILE="$SCRIPT_DIR/../data/linear_state.json"

echo "🔄 Auto-syncing Linear projects..."

# Get team ID
TEAM_ID=$(jq -r '.team.id' "$STATE_FILE")

# Fetch teams to get projects - MCP doesn't have direct project list
TEAMS_JSON=$(claude --exec-builtin mcp__linear__linear_get_teams 2>&1 <<< '{}')

# Check if we got valid response
if ! echo "$TEAMS_JSON" | jq empty 2>/dev/null; then
    echo "❌ Failed to fetch teams data"
    exit 1
fi

# For now, we'll manually add the known projects since the API doesn't expose them directly
# This is a temporary solution until we have a better way to list all projects
echo "⚠️  Note: Linear API doesn't expose all projects directly. Using known projects list."

# Clear existing projects
jq '.projects = {}' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"

# Process each project
echo "$PROJECTS_JSON" | jq -r '.projects.nodes[] | @json' | while read -r project; do
    PROJECT_DATA=$(echo "$project" | jq -r)
    
    PROJECT_ID=$(echo "$PROJECT_DATA" | jq -r '.id')
    PROJECT_NAME=$(echo "$PROJECT_DATA" | jq -r '.name')
    PROJECT_DESC=$(echo "$PROJECT_DATA" | jq -r '.description // ""')
    
    # Create a simple key from the project name (lowercase, no spaces)
    PROJECT_KEY=$(echo "$PROJECT_NAME" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd '[:alnum:]-')
    
    # Skip if no valid key
    if [ -z "$PROJECT_KEY" ]; then
        continue
    fi
    
    echo "  + $PROJECT_KEY → $PROJECT_NAME"
    
    # Update state file
    jq --arg key "$PROJECT_KEY" \
       --arg id "$PROJECT_ID" \
       --arg name "$PROJECT_NAME" \
       --arg desc "$PROJECT_DESC" \
       --arg tid "$TEAM_ID" \
       '.projects[$key] = {id: $id, name: $name, description: $desc, team_id: $tid}' \
       "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"
done

# Update last sync time
jq --arg time "$(date -u +%Y-%m-%dT%H:%M:%SZ)" '.last_sync = $time' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"

PROJECT_COUNT=$(jq -r '.projects | length' "$STATE_FILE")
echo ""
echo "✅ Synced $PROJECT_COUNT projects"