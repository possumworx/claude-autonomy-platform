#!/bin/bash
# Sync projects from Linear to local cache

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
STATE_FILE="$SCRIPT_DIR/../data/linear_state.json"

# Check if initialized
if [ ! -f "$STATE_FILE" ] || [ "$(jq -r '.team.id' "$STATE_FILE" 2>/dev/null)" == "" ]; then
    echo "❌ Linear not initialized. Run 'linear-init' first!"
    exit 1
fi

TEAM_ID=$(jq -r '.team.id' "$STATE_FILE")
echo "📥 Fetching projects for team..."

# This is where we'd run the MCP command
echo ""
echo "Run this command to get all projects:"
echo "mcp__linear__linear_get_teams"
echo ""
echo "For each project you want to track, provide:"
echo ""

# Simple interactive project addition for now
while true; do
    echo -n "Project name from Linear (or 'done' to finish): "
    read -r project_name
    
    if [[ "$project_name" == "done" ]]; then
        break
    fi
    
    echo -n "One-word handle (e.g., 'clap'): "
    read -r handle
    
    echo -n "Brief description: "
    read -r description
    
    echo -n "Project ID from Linear: "
    read -r project_id
    
    # Add to state file
    jq --arg handle "$handle" \
       --arg id "$project_id" \
       --arg name "$project_name" \
       --arg desc "$description" \
       --arg team "$TEAM_ID" \
       '.projects[$handle] = {
          "id": $id,
          "name": $name,
          "description": $desc,
          "team_id": $team
       }' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"
    
    echo "✅ Added project: $handle ($project_name)"
    echo ""
done

# Update last sync time
jq '.last_sync = now | todate' "$STATE_FILE" > "$STATE_FILE.tmp" && mv "$STATE_FILE.tmp" "$STATE_FILE"

echo "✅ Project sync complete!"