{
  "folders": [
    {
      "path": ".",
      "name": "ClAP Core"
    },
    {
      "path": "../discord-mcp",
      "name": "Discord MCP"
    },
    {
      "path": "../linear-mcp", 
      "name": "Linear MCP"
    },
    {
      "path": "../delta-home",
      "name": "Delta's Home"
    }
  ],
  "settings": {
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "editor.fontSize": 14,
    "terminal.integrated.fontSize": 14,
    "git.enableSmartCommit": true,
    "editor.formatOnSave": true,
    "workbench.colorCustomizations": {
      "activityBar.background": "#2C1B47",
      "titleBar.activeBackground": "#3D2461",
      "titleBar.activeForeground": "#FAFBFC"
    },
    "git.branchPrefix": "CLA-",
    "git.inputValidation": true,
    "[python]": {
      "editor.defaultFormatter": "ms-python.python"
    },
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
      "editor.wordWrap": "on"
    }
  },
  "extensions": {
    "recommendations": [
      "linear.linear-connect",
      "strigo.linear",
      "eamodio.gitlens",
      "esbenp.prettier-vscode",
      "ms-python.python",
      "streetsidesoftware.code-spell-checker",
      "usernamehw.errorlens",
      "gruntfuggly.todo-tree"
    ]
  },
  "launch": {
    "configurations": [
      {
        "name": "Debug Discord Bridge",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder:ClAP Core}/discord/discord_bridge.py",
        "console": "integratedTerminal"
      },
      {
        "name": "Debug Core Service",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder:ClAP Core}/core/main.py",
        "console": "integratedTerminal"
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Start ClAP",
        "type": "shell",
        "command": "./start.sh",
        "problemMatcher": [],
        "group": {
          "kind": "build",
          "isDefault": true
        }
      },
      {
        "label": "Check Linear Issues",
        "type": "shell",
        "command": "echo 'Fetching Linear issues...' && node ../linear-mcp/check-issues.js",
        "problemMatcher": []
      },
      {
        "label": "Git Status + Linear",
        "type": "shell",
        "command": "./scripts/status.sh",
        "problemMatcher": []
      }
    ]
  }
}
